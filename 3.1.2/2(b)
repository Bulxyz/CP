import math
import matplotlib.pyplot as plt

def calculate_S1(N):
    result = 0.0
    for n in range(1, N+1):
        result += ((-1)**n) * n / (n + 1)
    return result

def calculate_S3(N):
    result = 0.0
    for n in range(1, N+1):
        result += 1 / (2*n*(2*n+1))
    return result

# Initialize lists to store relative error and N values
relative_error = []
N_values = []

# Calculate S(3) to use as the exact answer
S3 = calculate_S3(1000000)

# Calculate relative error for different N values with increased step size for faster plotting
step_size = 1000
for N in range(1, 1000001, step_size):
    S1 = calculate_S1(N)
    error = abs((S1 - S3) / S3)
    relative_error.append(math.log10(error))
    N_values.append(math.log10(N))

# Create a log-log plot
plt.figure()
plt.plot(N_values, relative_error, label='Relative Error')
plt.xlabel('log10(N)')
plt.ylabel('log10(Relative Error)')
plt.title('Log-Log Plot of Relative Error vs. Number of Terms')
plt.legend()
plt.grid(True)
plt.show()
